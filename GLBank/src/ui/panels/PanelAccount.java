/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui.panels;

import database.ConnectionProvider;
import glbank.Account;
import glbank.Card;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.Random;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import ui.EditCardForm;
import ui.NewAccountCreatedDialog;

/**
 *
 * @author Solanid
 */
public class PanelAccount extends javax.swing.JPanel {
    private int idc;
    private int idemp;
    private List<Account> accList = null;
    private List<Card> cardList = null;
    Account account = null;
    Card selectedCard = null;
    
    /**
     * Creates new form PanelAccount
     */
    public PanelAccount(int idc,int idemp) {
        initComponents();
        this.idc=idc;
        this.idemp=idemp;
        btnAddMoney.setEnabled(false);
        btnSubstractMoney.setEnabled(false);
        initAccountList();
    }
    
    private void initAccountList() {
        showListOfAllAccounts();
        lblBalance.setText("");
        if (accList.isEmpty()) {
            return;
        }
        account = accList.get(0);
        lblBalance.setText(account.getBalance()+"");
        btnAddMoney.setEnabled(true);
        btnSubstractMoney.setEnabled(true);
    }
    
    private void showListOfAllAccounts() {
        comboListIdAcc.removeAllItems();
        accList = new ConnectionProvider().getListOfAccountsByIdc(idc);
        if (accList!=null && accList.size()>0) {
            accList.forEach((acc) -> {
                comboListIdAcc.addItem(acc.getIdacc()+" / 2701");
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        comboListIdAcc = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        lblBalance = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtAddAmount = new javax.swing.JTextField();
        txtSubAmount = new javax.swing.JTextField();
        btnAddMoney = new javax.swing.JButton();
        btnSubstractMoney = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        jSeparator1 = new javax.swing.JSeparator();
        btnNewAccount = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        comboListCards = new javax.swing.JComboBox<>();
        btnNewCard = new javax.swing.JButton();
        btnEditCard = new javax.swing.JButton();

        jLabel1.setText("Bank account:");

        comboListIdAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboListIdAccActionPerformed(evt);
            }
        });

        jLabel2.setText("Balance:");

        lblBalance.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        lblBalance.setText("0");

        jLabel3.setText("Cash transactions:");

        txtAddAmount.setText("0");
        txtAddAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAddAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAddAmountKeyTyped(evt);
            }
        });

        txtSubAmount.setText("0");
        txtSubAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtSubAmountKeyTyped(evt);
            }
        });

        btnAddMoney.setText("Add +");
        btnAddMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddMoneyActionPerformed(evt);
            }
        });

        btnSubstractMoney.setText("Sub -");
        btnSubstractMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubstractMoneyActionPerformed(evt);
            }
        });

        btnNewAccount.setText("New Account");
        btnNewAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewAccountActionPerformed(evt);
            }
        });

        jLabel4.setText("Cards:");

        comboListCards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboListCardsActionPerformed(evt);
            }
        });

        btnNewCard.setText("New Card");
        btnNewCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewCardActionPerformed(evt);
            }
        });

        btnEditCard.setText("Edit Card");
        btnEditCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCardActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAddMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSubstractMoney, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtAddAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSubAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 128, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(271, 271, 271))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboListCards, 0, 210, Short.MAX_VALUE)
                    .addComponent(comboListIdAcc, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnNewAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(btnNewCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditCard, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboListIdAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewAccount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboListCards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNewCard)
                    .addComponent(btnEditCard))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(132, 132, 132)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBalance)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(2, 2, 2)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAddAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSubAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddMoney)
                            .addComponent(btnSubstractMoney))
                        .addGap(31, 31, 31))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboListIdAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboListIdAccActionPerformed
        int index = comboListIdAcc.getSelectedIndex();
        if (index>=0) {
            account = accList.get(index);
            lblBalance.setText(account.getBalance()+"");
            showListOfCards();
        }
    }//GEN-LAST:event_comboListIdAccActionPerformed
    
    private void showListOfCards() {
        cardList = new ConnectionProvider().getCardsByIdAcc(account.getIdacc());
        comboListCards.removeAllItems();
        if (cardList!=null && cardList.size()>0) {
            btnEditCard.setEnabled(true);
            cardList.forEach((crd) ->{
                if (crd.isBlocked()) {
                    comboListCards.addItem(crd.getCardNumber()+" (BLOCKED)");
                } else 
                comboListCards.addItem(crd.getCardNumber()+" (ACTIVE)");
            });
        }
        else
        btnEditCard.setEnabled(false);
    }
    
    private float parseStringToFloat(String string) {
        if (string.length()>0) {
            try {
                return Float.parseFloat(string);
            } catch(NumberFormatException ex) {
                
            }
        }
        return 0;
    }
    
    private void btnAddMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddMoneyActionPerformed
        String amountString = txtAddAmount.getText().trim();
        float actBalance = account.getBalance();
        float amount = parseStringToFloat(amountString);
        amount = (float)Math.round(amount*100)/100;
        if (amount>=0.10) {
            new ConnectionProvider().insertCash(account.getIdacc(), amount, idemp);
            JOptionPane.showMessageDialog(this, "Deposit is OK.");
            initAccountList();
        }
    }//GEN-LAST:event_btnAddMoneyActionPerformed

    private void btnSubstractMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubstractMoneyActionPerformed
        String amountString = txtSubAmount.getText().trim();
        float actBalance = account.getBalance();
        float amount = parseStringToFloat(amountString);
        amount = (float)Math.round(amount*100)/100;
        if (amount>=0.10 && actBalance>amount) {
            amount*=-1;
            new ConnectionProvider().insertCash(account.getIdacc(), amount, idemp);
            JOptionPane.showMessageDialog(this, "Withdrawing is OK.");
            initAccountList();
        }
    }//GEN-LAST:event_btnSubstractMoneyActionPerformed

    private void btnNewAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewAccountActionPerformed
        // TODO add your handling code here:
        long newAccNumber = generateRandomAccount();
        if (new ConnectionProvider().addNewAccount(idc, newAccNumber)) {
            initAccountList();
            NewAccountCreatedDialog newAccountCreatedDialog = new NewAccountCreatedDialog((JFrame) this.getRootPane().getParent(), true, newAccNumber);
            newAccountCreatedDialog.setLocationRelativeTo(null);
            newAccountCreatedDialog.setVisible(true);
        }  
    }//GEN-LAST:event_btnNewAccountActionPerformed

    private void txtAddAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddAmountKeyReleased
 /*        String amountString=txtAddAmount.getText().trim();
        amountString = amountString.replaceAll(" ", "");
      boolean isNumeric = postcode.chars().allMatch( Character::isDigit );
        if (!isNumeric)
            txtAddAmount.;
        float amount = Float.parseFloat(amountString);
        System.out.println(amount);*/
    }//GEN-LAST:event_txtAddAmountKeyReleased

    private void txtAddAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAddAmountKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || c=='.')) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtAddAmountKeyTyped

    private void txtSubAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSubAmountKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || (c==KeyEvent.VK_BACK_SPACE) || (c==KeyEvent.VK_DELETE) || c=='.')) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtSubAmountKeyTyped

    private void btnEditCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCardActionPerformed
        EditCardForm editCardForm = new EditCardForm((JFrame) this.getRootPane().getParent(), true, selectedCard);
        editCardForm.setLocationRelativeTo(null);
        editCardForm.setVisible(true);
        editCardForm.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                showListOfCards();
            }
        });
    }//GEN-LAST:event_btnEditCardActionPerformed

    private void btnNewCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewCardActionPerformed
        int pin = generateCardPin();
        Card newCard = new Card(generateCardNumber(), account.getIdacc(), pin);
        new ConnectionProvider().addNewCard(newCard);
        JOptionPane.showMessageDialog(this, "New Card created with pin "+pin+".");
        showListOfCards();
    }//GEN-LAST:event_btnNewCardActionPerformed

    private void comboListCardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboListCardsActionPerformed
        int index = comboListCards.getSelectedIndex();
        if (index>=0) {
            selectedCard = cardList.get(index);
        }
    }//GEN-LAST:event_comboListCardsActionPerformed

    private long generateRandomAccount() {
        ConnectionProvider conn = new ConnectionProvider();
        long proposalAccount = 0;
        do {
            proposalAccount = Math.abs(new Random().nextLong()%900000000)*11;
        } while (conn.isAccountAlreadyUsed(proposalAccount));
        return proposalAccount;
    }
    
    private long generateCardNumber() {
        ConnectionProvider conn = new ConnectionProvider();
        long proposalCardNumber = Math.abs(new Random().nextInt()%10);
        long num1 = new Long(1000000000)*1000000;
        do {
            proposalCardNumber = 0;
            proposalCardNumber = Math.abs(new Random().nextInt()%10);
            while ( proposalCardNumber < num1 || proposalCardNumber > num1*10) {
                proposalCardNumber*=10;
                proposalCardNumber += new Random().nextInt()%10;
            }
        } while (conn.isCardNumberAlreadyUsed(proposalCardNumber));
        return proposalCardNumber;
    }
    
    private int generateCardPin() {
        int pin = 0;
        for (int i = 0; i < 3; i++) {
            pin += Math.abs(new Random().nextInt()%10);
            pin *= 10;
        } 
        pin += new Random().nextInt()%10;
        return pin;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddMoney;
    private javax.swing.JButton btnEditCard;
    private javax.swing.JButton btnNewAccount;
    private javax.swing.JButton btnNewCard;
    private javax.swing.JButton btnSubstractMoney;
    private javax.swing.JComboBox<String> comboListCards;
    private javax.swing.JComboBox<String> comboListIdAcc;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblBalance;
    private javax.swing.JTextField txtAddAmount;
    private javax.swing.JTextField txtSubAmount;
    // End of variables declaration//GEN-END:variables

    
}
